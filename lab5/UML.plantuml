@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class Add {
  + execute(): void
  + checkArgument(Object): boolean
}
class AddIfMin {
  + checkArgument(Object): boolean
  + execute(): void
}
class CSVManager {
  + readFromFile(String): TreeSet<City>
  + write(String, TreeSet<City>): void
}
class City {
  - height: int
  - creationDate: Date
  - standardOfLiving: StandardOfLiving
  - governor: Human
  - coordinates: Coordinates
  - population: int
  - metersAboveSeaLevel: Double
  - name: String
  - id: long
  - government: Government
  - area: Integer
  - climate: Climate
  + compareTo(City): int
  + toString(): String
   name: String
   coordinates: Coordinates
   metersAboveSeaLevel: Double
   climate: Climate
   height: int
   population: Integer
   creationDate: Date
   area: int
   standardOfLiving: StandardOfLiving
   id: long
   governor: Human
   government: Government
}
class CityComparator {
  + compare(City, City): int
}
class CityComparatorByMetersAboveSeaLevel {
  + compare(City, City): int
}
class Clear {
  + checkArgument(Object): boolean
  + execute(): void
}
enum Climate << enumeration >> {
  + values(): Climate[]
  + valueOf(String): Climate
}
class CollectionManager {
  - pathToDataFile: String
  + loadCollection(String): void
  + writeCollection(): void
   pathToDataFile: String
   newCity: City
   cityCollection: TreeSet<City>
}
class Command {
  - hasArgument: boolean
  - argument: Object
  + execute(): void
  + checkArgument(Object): boolean
   argument: Object
   hasArgument: boolean
}
interface CommandInterface << interface >> {
  + execute(): void
  + checkArgument(Object): boolean
}
class CommandManager {
  - commandMap: HashMap<String, Command>
   commandMap: HashMap<String, Command>
}
class Coordinates {
  - y: double
  - x: int
  + toString(): String
  + hashCode(): int
  + compareTo(Coordinates): int
   y: double
   x: int
}
class ExecuteScript {
  + execute(): void
  + checkArgument(Object): boolean
}
class Exit {
  + execute(): void
  + checkArgument(Object): boolean
}
enum Government << enumeration >> {
  + values(): Government[]
  + valueOf(String): Government
}
class Help {
  + execute(): void
  + checkArgument(Object): boolean
}
class History {
  + printHistory(): void
  + initializeCommandsHistoryQueue(): void
  + addToCommandsHistoryQueue(String): void
  + execute(): void
  + checkArgument(Object): boolean
}
class Human {
  + compareTo(Human): int
  + toString(): String
}
class IdChecker {
  + id: long
  + checkCityById(String): Object?
   id: long
}
class Info {
  + execute(): void
  + checkArgument(Object): boolean
}
class Main {
  + main(String[]): void
}
interface Managers << interface >> {
  + write(String, TreeSet<City>): void
  + readFromFile(String): TreeSet<City>
}
class PrintDescending {
  + checkArgument(Object): boolean
  + execute(): void
}
class PrintFieldDescendingMetersAboveSeaLevel {
  + execute(): void
  + checkArgument(Object): boolean
}
class RemoveById {
  + execute(): void
  + checkArgument(Object): boolean
}
class RemoveGreater {
  + checkArgument(Object): boolean
  + execute(): void
}
class Save {
  + checkArgument(Object): boolean
  + execute(): void
}
class Show {
  + execute(): void
  + checkArgument(Object): boolean
}
enum StandardOfLiving << enumeration >> {
  + values(): StandardOfLiving[]
  + valueOf(String): StandardOfLiving
}
class SumOfMetersAboveSeaLevel {
  + checkArgument(Object): boolean
  + execute(): void
}
class UpdateId {
  + execute(): void
  + checkArgument(Object): boolean
}
class UserManager {
  - isWorking: boolean
  + createNewCityByUser(): ArrayList<Object>
  + requestCommand(): void
  - requestEnum(Object[], String): Object
   isWorking: boolean
   working: boolean
}

Add                                      -[#000082,plain]-^  Command                                 
AddIfMin                                 -[#000082,plain]-^  Command                                 
CSVManager                               -[#595959,dashed]->  City                                    : "«create»"
CSVManager                               -[#595959,dashed]->  CityComparator                          : "«create»"
CSVManager                               -[#595959,dashed]->  Coordinates                             : "«create»"
CSVManager                               -[#595959,dashed]->  Human                                   : "«create»"
CSVManager                               -[#008200,dashed]-^  Managers                                
City                                    "1" *-[#595959,plain]-> "climate\n1" Climate                                 
City                                    "1" *-[#595959,plain]-> "coordinates\n1" Coordinates                             
City                                    "1" *-[#595959,plain]-> "government\n1" Government                              
City                                    "1" *-[#595959,plain]-> "governor\n1" Human                                   
City                                    "1" *-[#595959,plain]-> "standardOfLiving\n1" StandardOfLiving                        
Clear                                    -[#000082,plain]-^  Command                                 
CollectionManager                        -[#595959,dashed]->  CSVManager                              : "«create»"
CollectionManager                       "1" *-[#595959,plain]-> "cityTreeSet\n*" City                                    
CollectionManager                        -[#595959,dashed]->  City                                    : "«create»"
Command                                  -[#008200,dashed]-^  CommandInterface                        
CommandManager                           -[#595959,dashed]->  Add                                     : "«create»"
CommandManager                           -[#595959,dashed]->  AddIfMin                                : "«create»"
CommandManager                          "1" *-[#595959,plain]-> "cities\n1" City                                    
CommandManager                           -[#595959,dashed]->  Clear                                   : "«create»"
CommandManager                          "1" *-[#595959,plain]-> "commandMap\n*" Command                                 
CommandManager                           -[#595959,dashed]->  ExecuteScript                           : "«create»"
CommandManager                           -[#595959,dashed]->  Exit                                    : "«create»"
CommandManager                           -[#595959,dashed]->  Help                                    : "«create»"
CommandManager                           -[#595959,dashed]->  History                                 : "«create»"
CommandManager                           -[#595959,dashed]->  Info                                    : "«create»"
CommandManager                           -[#595959,dashed]->  PrintDescending                         : "«create»"
CommandManager                           -[#595959,dashed]->  PrintFieldDescendingMetersAboveSeaLevel : "«create»"
CommandManager                           -[#595959,dashed]->  RemoveById                              : "«create»"
CommandManager                           -[#595959,dashed]->  RemoveGreater                           : "«create»"
CommandManager                           -[#595959,dashed]->  Save                                    : "«create»"
CommandManager                           -[#595959,dashed]->  Show                                    : "«create»"
CommandManager                           -[#595959,dashed]->  SumOfMetersAboveSeaLevel                : "«create»"
CommandManager                           -[#595959,dashed]->  UpdateId                                : "«create»"
ExecuteScript                            -[#000082,plain]-^  Command                                 
ExecuteScript                           "1" *-[#595959,plain]-> "commandMap\n*" Command                                 
Exit                                     -[#000082,plain]-^  Command                                 
Help                                     -[#000082,plain]-^  Command                                 
History                                  -[#000082,plain]-^  Command                                 
Info                                     -[#000082,plain]-^  Command                                 
Main                                     -[#595959,dashed]->  CollectionManager                       : "«create»"
PrintDescending                          -[#000082,plain]-^  Command                                 
PrintFieldDescendingMetersAboveSeaLevel  -[#595959,dashed]->  CityComparatorByMetersAboveSeaLevel     : "«create»"
PrintFieldDescendingMetersAboveSeaLevel  -[#000082,plain]-^  Command                                 
RemoveById                               -[#000082,plain]-^  Command                                 
RemoveGreater                            -[#000082,plain]-^  Command                                 
Save                                     -[#595959,dashed]->  CollectionManager                       : "«create»"
Save                                     -[#000082,plain]-^  Command                                 
Show                                     -[#000082,plain]-^  Command                                 
SumOfMetersAboveSeaLevel                 -[#000082,plain]-^  Command                                 
UpdateId                                 -[#000082,plain]-^  Command                                 
UserManager                             "1" *-[#595959,plain]-> "commandMap\n*" Command                                 
UserManager                              -[#595959,dashed]->  Coordinates                             : "«create»"
UserManager                              -[#595959,dashed]->  Human                                   : "«create»"
@enduml
